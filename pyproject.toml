[build-system]
requires = ["setuptools>=61.0", "packaging>=23.0"]
build-backend = "setuptools.build_meta"

[project]
name = "ai-langchain-tools"
version = "0.1.0"
description = "A collection of tools and services for working with LangChain"
readme = "README.md"
requires-python = ">=3.8"
license = { text = "MIT" }
authors = [
    { name = "Your Name", email = "your.email@example.com" }
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "langchain>=0.1.0",
    "langchain-community>=0.0.10",
    "langchain-ollama>=0.0.1",
    "pydantic>=2.0.0",
    "pyyaml>=6.0.1",
    "requests>=2.31.0",
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0"
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=2.0.0"
]

[tool.setuptools]
packages = ["src"]
cmdclass = { 
    "verify" = "setup:VerifyCommand",
    "install" = "setup:CustomInstallCommand",
    "help" = "setup:ShowHelpCommand"
}

[tool.black]
line-length = 88
target-version = ["py38"]

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
line-length = 88
target-version = "py38"
select = ["E", "F", "B", "I"]
ignore = []

[project.scripts]
verify-env = "setup:main" 